/*
 * ResultDialog.java
 *
 * Created on May 24, 2008, 11:16 AM
 */

package posdesktop;
import java.sql.ResultSet;
import javax.swing.*;
import javax.swing.event.*;
import ordering.ResMenu;
import jpos.POSPrinterControl111;
/**
 *
 * @author  angelchen
 */
public class ResultDialog extends javax.swing.JDialog {
    ResultSet srs;
    SqlFunc sqlcus;
    private boolean needToSave=false;
    DocumentListener dl = new MyDocumentListener();
    private ResMenu theMenu;
    private RunGui mainWindow;
//    private POSPrinterControl111 ptr;
    /** Creates new form ResultDialog */
    public ResultDialog(RunGui parent, boolean modal, SqlFunc theSqlcus, ResultSet theSrs) {
        super(parent, modal);
        initComponents();
        this.srs=theSrs;
        this.sqlcus=theSqlcus;
        this.theMenu=parent.theMenu;
        mainWindow=parent;
    }
/*
    public ResultDialog(RunGui parent, boolean modal, SqlFunc sqlcus, ResultSet srs,POSPrinterControl111 ptr) {
        this(parent,modal,sqlcus,srs);
        this.ptr=ptr;
    }
 */ 
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cusIDField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        editBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        phoneField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressField = new javax.swing.JTextArea();
        orderBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24));
        jLabel1.setText("Customer ID:");

        cusIDField.setEditable(false);
        cusIDField.setFont(new java.awt.Font("Serif", 0, 24));
        cusIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusIDFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24));
        jLabel2.setText("Telephone:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24));
        jLabel3.setText("Name:");

        nameField.setDocument(new FieldDocument(posdesktop.SqlFunc.NAME_MAX_LENGTH));
        nameField.setEditable(false);
        nameField.setFont(new java.awt.Font("Serif", 0, 24));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24));
        jLabel4.setText("Address:");

        editBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        saveBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        saveBtn.setText("Save");
        saveBtn.setEnabled(false);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Tahoma", 0, 24));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        closeBtn.setFont(new java.awt.Font("Tahoma", 0, 24));
        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        phoneField.setDocument(new FieldDocument(posdesktop.SqlFunc.PHONE_LENGTH));
        phoneField.setEditable(false);
        phoneField.setFont(new java.awt.Font("Serif", 0, 24));
        phoneField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneFieldActionPerformed(evt);
            }
        });

        addressField.setColumns(20);
        addressField.setDocument(new FieldDocument(posdesktop.SqlFunc.ADDRESS_MAX_LENGTH));
        addressField.setEditable(false);
        addressField.setFont(new java.awt.Font("Serif", 0, 24));
        addressField.setLineWrap(true);
        addressField.setRows(5);
        jScrollPane1.setViewportView(addressField);

        orderBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        orderBtn.setText("Order");
        orderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(orderBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(editBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                    .addComponent(nameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                    .addComponent(cusIDField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                    .addComponent(phoneField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cusIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBtn)
                    .addComponent(saveBtn)
                    .addComponent(deleteBtn)
                    .addComponent(closeBtn)
                    .addComponent(orderBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void cusIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusIDFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_cusIDFieldActionPerformed

private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
// TODO add your handling code here:
    toggleEditSaveBtn(true);
}//GEN-LAST:event_editBtnActionPerformed

private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
// TODO add your handling code here:
    //if(phoneField.getText().length()!=10){
    //    JOptionPane.showMessageDialog(rootPane,"Invalid phone number",null,JOptionPane.ERROR_MESSAGE);
    //    return;
    //}
    /*
    if(phoneField.getText().length()==0 || nameField.getText().length()==0){
        JOptionPane.showMessageDialog(rootPane, "Name or Phone field can't be empty");
        return;
    } else if(phoneField.getText().length()!=SqlFunc.PHONE_LENGTH || !SqlFunc.checkNum(phoneField.getText())){
        JOptionPane.showMessageDialog(rootPane,"Invalid phone number",null,JOptionPane.ERROR_MESSAGE);
        return;
    }
    */
    try{
        phoneField.setText(SqlFunc.makePhoneValidIfPossible(phoneField.getText()));
        sqlcus.editCustomer(phoneField.getText(), nameField.getText(), addressField.getText(), srs,cusIDField.getText());
        JOptionPane.showMessageDialog(rootPane,"Record successfully saved");
        needToSave=false;
        toggleEditSaveBtn(false);
    } catch (InvalidEntryException e){
        JOptionPane.showMessageDialog(rootPane,e.getMessage(),null,JOptionPane.ERROR_MESSAGE);
        return;
    } catch (DuplicateEntryException e){
        JOptionPane.showMessageDialog(rootPane,e.getMessage(),null,JOptionPane.ERROR_MESSAGE);
        return;
    } catch(Exception e){
        e.printStackTrace();
    }
}//GEN-LAST:event_saveBtnActionPerformed

private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
// TODO add your handling code here:
    if(needToSave){
            Object[] options = { "Yes", "No", "Cancel" };
        int saveClicked=JOptionPane.showOptionDialog(rootPane, "Save Before Quitting?",null,
                    JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        if(saveClicked==0) {
            saveBtnActionPerformed(null);
        } else if(saveClicked==2){
            return;
        }
    }
        this.dispose();
}//GEN-LAST:event_closeBtnActionPerformed

private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
// TODO add your handling code here:
        Object[] options = { "Yes", "No" };
    int del=JOptionPane.showOptionDialog(rootPane, "Are you sure you want to delete the current record?",null,
            JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);
    if(del==0){
    try{
        srs.deleteRow();
    } catch (Exception e){
        e.printStackTrace();
    }
    this.dispose();
    }
}//GEN-LAST:event_deleteBtnActionPerformed

private void phoneFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_phoneFieldActionPerformed

private void orderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderBtnActionPerformed
// TODO add your handling code here:
    try{
    Customer cus=new Customer(srs.getInt("CustomerID"),srs.getString("Phone"),
            srs.getString("Name"),srs.getString("Address"));
    //orderDialog dialog = new orderDialog(null, true, cus, theMenu, ptr);
    OrderDialog dialog = new OrderDialog(mainWindow, true, cus, theMenu);
    dialog.setVisible(true);
    } catch(Exception e){
        e.printStackTrace();
    }
    if(!needToSave){
        this.dispose();
    }
}//GEN-LAST:event_orderBtnActionPerformed
private void toggleEditSaveBtn(boolean enableSave){
    if(enableSave){
        phoneField.getDocument().addDocumentListener(dl);
        nameField.getDocument().addDocumentListener(dl);
        addressField.getDocument().addDocumentListener(dl);
        phoneField.setEditable(true);
        nameField.setEditable(true);
        addressField.setEditable(true);
        saveBtn.setEnabled(true);
        editBtn.setEnabled(false);
    } else {
        phoneField.getDocument().removeDocumentListener(dl);
        nameField.getDocument().removeDocumentListener(dl);
        addressField.getDocument().removeDocumentListener(dl);
        phoneField.setEditable(false);
        nameField.setEditable(false);
        addressField.setEditable(false);
        saveBtn.setEnabled(false);
        editBtn.setEnabled(true);
    }
}

class MyDocumentListener implements DocumentListener {
 
    public void insertUpdate(DocumentEvent e) {
        needToSave=true;
    }
    public void removeUpdate(DocumentEvent e) {
        needToSave=true;
    }
    public void changedUpdate(DocumentEvent e) {
        //Plain text components do not fire these events
    }

}

    /* can't run by it self
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ResultDialog dialog = new ResultDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextArea addressField;
    private javax.swing.JButton closeBtn;
    public javax.swing.JTextField cusIDField;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField nameField;
    private javax.swing.JButton orderBtn;
    public javax.swing.JTextField phoneField;
    private javax.swing.JButton saveBtn;
    // End of variables declaration//GEN-END:variables

}
