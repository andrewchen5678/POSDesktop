/*
 * MainProgram.java
 *
 * Created on May 23, 2008, 5:57 PM
 */

package posdesktop;
import java.sql.*;
import javax.swing.*;
import ordering.*;
//import javax.swing.text.*;
//import jpos.JposException;
import jpos.POSPrinterControl111;

//import jpos.POSPrinter;
//import java.util.Scanner;
//import java.io.*;
/**
 *
 * @author  angelchen
 */
public class RunGui extends javax.swing.JDialog {
    public static final byte PHONE_SEARCH = 1;
    public static final byte NAME_SEARCH = 2;
    public static final byte ADDRESS_SEARCH = 3;
    private SqlFunc sqlcus;
    private ResultSet srs;
    private Connection con;
    //private POSPrinterControl111 ptr;
    protected ResMenu theMenu;
    //private MaskFormatter mask = null;
    /** Creates new form NewJFrame */
    public RunGui(javax.swing.JDialog parent, boolean modal, Connection theCon,SqlFunc theSqlcus) throws Exception {
        super(parent,modal);
        this.sqlcus = theSqlcus;
        this.con=theCon;
        theMenu=new ResMenu(theCon);
        //System.err.println(theCon);
        initComponents();
        //this.ptr=ptr;
        //initPrinter();
    }
    
    public boolean isLunchSpecialSelected(){
        return lunchSpecialBox.isSelected();
    }

    public boolean isAutoToggleSelected(){
        return autoToggleChk.isSelected();
    }
    
    private void helperSearch(byte searchType, boolean exact){
            try{
                //int rowCount;
                if(searchType==PHONE_SEARCH){
                    //srs = sqlcus.searchbyPhone(phoneFieldMain.getText(1,3)+phoneFieldMain.getText(6,3)+phoneFieldMain.getText(10,4),exact);
                    srs = sqlcus.searchbyPhone(SqlFunc.makePhoneValidIfPossible(phoneFieldMain.getText()),exact);
                } else if (searchType==NAME_SEARCH){
                    throw new UnsupportedOperationException();
                    //srs = sqlcus.searchbyName(nameFieldMain.getText(),exact);
                } else if (searchType==ADDRESS_SEARCH){
                    throw new UnsupportedOperationException();
                    //srs = sqlcus.searchbyAddress(addressFieldMain.getText(),exact);
                }
                //printResult(srs);
                ResultDialog rd = null;
                if (srs.next()){
                    /* srs.last();
                    rowCount=srs.getRow();
                    srs.first();
                    if(rowCount>1){
                        JOptionPane.showMessageDialog(null, "More than one result found!");
                        System.out.println("More than one result found!");
                    } else {
                    */		  
                        //rd = new ResultDialog(this,true,sqlcus,srs,ptr);
                        rd = new ResultDialog(this,true,sqlcus,srs);
                        rd.cusIDField.setText(srs.getString("CustomerID"));
                        rd.phoneField.setText(srs.getString("Phone"));
                        rd.nameField.setText(srs.getString("Name"));
                        rd.addressField.setText(srs.getString("Address"));
                        rd.setVisible(true);
                    //}
                } else {
                    int choice=JOptionPane.showConfirmDialog(this,"No result found, new customer?",null,JOptionPane.YES_NO_OPTION);
                    if(choice==0){
                            try{
                            //orderDialog dialog = new orderDialog(this, true, null,theMenu,ptr);
                            //OrderDialog dialog = new OrderDialog(this, true, phoneFieldMain.getText(),nameFieldMain.getText(),addressFieldMain.getText(),theMenu);
                            OrderDialog dialog = new OrderDialog(this, true, phoneFieldMain.getText(),theMenu);
                            dialog.setVisible(true);
                            } catch(InvalidQuantityException e){
                                e.printStackTrace();
                            }
                    }
                    //Customer newCus=new Customer(phoneFieldMain.getText())
                }
                phoneFieldMain.setText("");

            } catch (InvalidEntryException e){
                JOptionPane.showMessageDialog(this, e.getMessage());
            } catch (SQLException e){
                e.printStackTrace();
            }
    }
    
    public void toggleLunchSpecial(boolean selected){
        lunchSpecialBox.setSelected(selected);
    }    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        phoneBtn = new javax.swing.JButton();
        clearFieldBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        orderBtn = new javax.swing.JButton();
        createNewBtn = new javax.swing.JButton();
        phoneFieldMain = new javax.swing.JTextField();
        prevEntryBtn = new javax.swing.JButton();
        lunchSpecialBox = new javax.swing.JCheckBox();
        autoToggleChk = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
        });

        phoneBtn.setFont(new java.awt.Font("Agency FB", 0, 36));
        phoneBtn.setText("Search By Phone");
        phoneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneBtnActionPerformed(evt);
            }
        });

        clearFieldBtn.setFont(new java.awt.Font("Agency FB", 0, 36)); // NOI18N
        clearFieldBtn.setText("Clear Field");
        clearFieldBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFieldBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 18));
        jLabel5.setText("Telephone Number:");

        orderBtn.setFont(new java.awt.Font("Agency FB", 0, 36)); // NOI18N
        orderBtn.setText("Order");
        orderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderBtnActionPerformed(evt);
            }
        });

        createNewBtn.setFont(new java.awt.Font("Agency FB", 0, 36));
        createNewBtn.setText("Create Customer");
        createNewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewBtnActionPerformed(evt);
            }
        });

        phoneFieldMain.setDocument(new NumFieldDocument(posdesktop.SqlFunc.PHONE_LENGTH));
        phoneFieldMain.setFont(new java.awt.Font("Serif", 0, 36)); // NOI18N
        phoneFieldMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneFieldMainActionPerformed(evt);
            }
        });

        prevEntryBtn.setFont(new java.awt.Font("Agency FB", 0, 36));
        prevEntryBtn.setText("Previous Entry");
        prevEntryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevEntryBtnActionPerformed(evt);
            }
        });

        lunchSpecialBox.setFont(new java.awt.Font("SansSerif", 0, 24));
        lunchSpecialBox.setText("Lunch Special");
        lunchSpecialBox.setEnabled(false);

        autoToggleChk.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        autoToggleChk.setSelected(true);
        autoToggleChk.setText("Auto Toggle L.S.");
        autoToggleChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoToggleChkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prevEntryBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(orderBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clearFieldBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(createNewBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(autoToggleChk)
                            .addComponent(lunchSpecialBox)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(phoneFieldMain, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phoneBtn)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(phoneFieldMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderBtn)
                    .addComponent(clearFieldBtn)
                    .addComponent(createNewBtn)
                    .addComponent(autoToggleChk))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(lunchSpecialBox))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(prevEntryBtn)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void createNewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewBtnActionPerformed
// TODO add your handling code here:
    NewCustomerDialog ncd = new NewCustomerDialog(this,true,sqlcus);
    ncd.setVisible(true);
}//GEN-LAST:event_createNewBtnActionPerformed

private void phoneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneBtnActionPerformed
// TODO add your handling code here:
    helperSearch(PHONE_SEARCH,SqlFunc.EXACT_MATCH);
}//GEN-LAST:event_phoneBtnActionPerformed

private void clearFieldBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFieldBtnActionPerformed
// TODO add your handling code here:
    phoneFieldMain.setText("");
    //nameFieldMain.setText("");
    //addressFieldMain.setText("");
}//GEN-LAST:event_clearFieldBtnActionPerformed

private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
// TODO add your handling code here:
}//GEN-LAST:event_formWindowDeactivated

private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
// TODO add your handling code here:
    //closePrinter();
}//GEN-LAST:event_formWindowClosing

private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
// TODO add your handling code here:
}//GEN-LAST:event_formWindowClosed

private void orderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderBtnActionPerformed
// TODO add your handling code here:
    try{
    //orderDialog dialog = new orderDialog(this, true, null,theMenu,ptr);
    //OrderDialog dialog = new OrderDialog(this, true, phoneFieldMain.getText(),nameFieldMain.getText(),addressFieldMain.getText(),theMenu);
        OrderDialog dialog = new OrderDialog(this, true, phoneFieldMain.getText(),theMenu);
    dialog.setVisible(true);
    phoneFieldMain.setText("");
    } catch(InvalidQuantityException e){
        e.printStackTrace();
    }
}//GEN-LAST:event_orderBtnActionPerformed

/*
private void nameBtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
// TODO add your handling code here:
    helperSearch(NAME_SEARCH,SqlFunc.EXACT_MATCH);
}                                       

private void addressBtnActionPerformed(java.awt.event.ActionEvent evt) {                                           
// TODO add your handling code here:
    helperSearch(ADDRESS_SEARCH,SqlFunc.EXACT_MATCH);
}                                          
*/
private void phoneFieldMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneFieldMainActionPerformed
// TODO add your handling code here:
    phoneBtnActionPerformed(null);
}//GEN-LAST:event_phoneFieldMainActionPerformed

private void prevEntryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevEntryBtnActionPerformed
// TODO add your handling code here:
    if(MainProgram.getPrevEntryArray()!=null){
        previousSelectDiag pd = new previousSelectDiag(this, true,MainProgram.getPrevEntryArray());
        //pd.showReceipt(false);
        pd.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "No previous entry");
    }
}//GEN-LAST:event_prevEntryBtnActionPerformed

private void autoToggleChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoToggleChkActionPerformed
// TODO add your handling code here:
    if(autoToggleChk.isSelected()){
        lunchSpecialBox.setEnabled(false);
    }else{
        lunchSpecialBox.setEnabled(true);
    }
}//GEN-LAST:event_autoToggleChkActionPerformed

/*
private void settleNow(){
    //String pass=JOptionPane.showInputDialog(this,"enter password:");
    char[] pass=null;
    final JPasswordField jpf = new JPasswordField();
    JOptionPane jop = new JOptionPane(jpf,
      JOptionPane.QUESTION_MESSAGE,
      JOptionPane.OK_CANCEL_OPTION);
    JDialog dialog = jop.createDialog("Password:");
    dialog.addComponentListener(new java.awt.event.ComponentAdapter(){
      public void componentShown(java.awt.event.ComponentEvent e){
        jpf.requestFocusInWindow();
      }
    });
    dialog.setVisible(true);
    int resultval = (Integer)jop.getValue();
    dialog.dispose();
    //char[] password = null;
    if(resultval == JOptionPane.OK_OPTION){
      pass = jpf.getPassword();
    } else {
        System.out.println("cancel pressed");
        return;
    }

    
    try{
        byte result=MainProgram.getSqlcus().settle(new String(pass));
        if(result==SqlFunc.NOTHING_SETTLE){
            JOptionPane.showMessageDialog(this, "nothing to settle");
        } else if(result==SqlFunc.WRONG_PASS) {
            JOptionPane.showMessageDialog(this, "wrong password");
        } else{
            JOptionPane.showMessageDialog(this, "settle successful");
        }
    } catch (SQLException e){
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
}
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autoToggleChk;
    private javax.swing.JButton clearFieldBtn;
    private javax.swing.JButton createNewBtn;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JCheckBox lunchSpecialBox;
    private javax.swing.JButton orderBtn;
    private javax.swing.JButton phoneBtn;
    private javax.swing.JTextField phoneFieldMain;
    private javax.swing.JButton prevEntryBtn;
    // End of variables declaration//GEN-END:variables
}
